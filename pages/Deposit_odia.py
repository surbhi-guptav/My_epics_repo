import streamlit as st
import speech_recognition as sr  # For voice recognition
from googletrans import Translator  # Import Translator for language conversion
import re  # For validation
from datetime import datetime

# Set Page Config
st.set_page_config(page_title="рммрнНрнЯрм╛рмЩрнНрмХ рмЬрморм╛ рмлрм░рнНрмо", layout="centered")

# Initialize session state variables
if "manual_input" not in st.session_state:
    st.session_state.manual_input = False
if "voice_input" not in st.session_state:
    st.session_state.voice_input = False
if "voice_text" not in st.session_state:
    st.session_state.voice_text = ""  # Store spoken words
translator = Translator()

# Custom CSS for Styling
st.markdown(
    """
    <style>
        .title {
            text-align: center;
            font-size: 36px;
            font-weight: bold;
            color: white;
            padding: 20px;
            border-radius: 10px;
            background: linear-gradient(90deg, #87CEEB, #4682B4);
            margin-bottom: 20px;
        }
        .stButton>button {
            width: 180px;
            height: 45px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 10px;
            transition: 0.3s;
            background: #87CEEB;
            color: white;
            border: none;
        }
        .stButton>button:hover {
            background: #4682B4;
        }
    </style>
    """,
    unsafe_allow_html=True
)

# Header (Enlarged)
st.markdown('<p class="title">ЁЯПж рммрнНрнЯрм╛рмЩрнНрмХ рмЦрм╛рмдрм╛ рмЬрморм╛ рмлрм░рнНрмо</p>', unsafe_allow_html=True)

# Toggle Buttons for Input Method
st.write("### рмЗрмирмкрнБрмЯ рмкрнНрм░рмХрм╛рм░ рммрм╛рмЫрмирнНрмдрнБ:")
col1, col2 = st.columns(2)

if col1.button("ЁЯУЭ рм╣рм╕рнНрмдрмХрнГрмд рмЗрмирмкрнБрмЯ"):
    st.session_state.manual_input = True
    st.session_state.voice_input = False

if col2.button("ЁЯОд рмзрнНрн▒рмирм┐ рмЗрмирмкрнБрмЯ рммрнНрнЯрммрм╣рм╛рм░ рмХрм░рмирнНрмдрнБ"):
    st.session_state.voice_input = True
    st.session_state.manual_input = False
    st.info("ЁЯОЩ рмХрмерм╛ рмХрм░рмирнНрмдрнБ, рмПрммрмВ рмЖрмкрмгрмЩрнНрмХ рм╢рммрнНрмж рмзрм░рм╛рм╣рнЗрмм!")

# *Manual Input Section*
if st.session_state.manual_input:
    with st.form("deposit_form"):
        st.subheader("ЁЯСд рммрнНрнЯрмХрнНрмдрм┐рмЧрмд рммрм┐рммрм░рмгрнА")


        # Single name field
        full_name = st.text_input("рмкрнБрм░рм╛ рмирм╛рмо*", placeholder="рмкрнБрм░рм╛ рмирм╛рмо рмнрм░рмирнНрмдрнБ")

        st.subheader("ЁЯУЮ рмпрнЗрм╛рмЧрм╛рмпрнЗрм╛рмЧ рммрм┐рммрм░рмгрнА")
        contact_col1, contact_col2 = st.columns([1, 3])
        country_code = contact_col1.selectbox("рмжрнЗрм╢ рмХрнЗрм╛рмбрнН", ["+91", "+1", "+44", "+61"])
        phone_number = contact_col2.text_input("рмлрнЗрм╛рми рмирморнНрммрм░", placeholder="10 рмбрм┐рмЬрм┐рмЯ рмлрнЗрм╛рми рмирморнНрммрм░ рмнрм░рмирнНрмдрнБ")

        st.subheader("ЁЯПз рмЦрм╛рмдрм╛ рммрм┐рммрм░рмгрнА")
        account_number = st.text_input("ЁЯФС рмЦрм╛рмдрм╛ рмирморнНрммрм░", placeholder="12-рмбрм┐рмЬрм┐рмЯ рмЦрм╛рмдрм╛ рмирморнНрммрм░ рмнрм░рмирнНрмдрнБ")
        deposit_amount = st.text_input("ЁЯТ╡ рмЬрморм╛ рм░рм╛рм╢рм┐", placeholder="рморнБрм▓рнНрнЯ рмнрм░рмирнНрмдрнБ (тВ╣)")

        st.subheader("ЁЯУЕ рмЬрморм╛ рмдрм╛рм░рм┐рмЦ")
        deposit_date = st.date_input("рмдрм╛рм░рм┐рмЦ рммрм╛рмЫрмирнНрмдрнБ", value=datetime.today())

        notes = st.text_area("ЁЯУЭ рмЕрмдрм┐рм░рм┐рмХрнНрмд рмЯрм┐рмкрнНрмкрмгрнА (рмРрмЫрм┐рмХ)", placeholder="рмХрнЗрнЧрмгрм╕рм┐ рммрм┐рм╢рнЗрм╖ рмирм┐рм░рнНрмжрнНрмжрнЗрм╢ рмжрм┐рмЕрмирнНрмдрнБ")

        # Validation
        errors = []
        if not full_name:
            errors.append("ЁЯФ┤ рмжрнЯрм╛рмХрм░рм┐ рмкрнБрм░рм╛ рмирм╛рмо рмнрм░рмирнНрмдрнБред")
        if phone_number and (not phone_number.isdigit() or len(phone_number) != 10):
            errors.append("ЁЯФ┤ рмлрнЗрм╛рми рмирморнНрммрм░ 10 рмбрм┐рмЬрм┐рмЯ рм╣рнЗрм╛рмЗрмерм┐рммрм╛ рмЙрмЪрм┐рмдред")
        if account_number and (not account_number.isdigit() or len(account_number) != 12):
            errors.append("ЁЯФ┤ рмЦрм╛рмдрм╛ рмирморнНрммрм░ 12 рмбрм┐рмЬрм┐рмЯ рм╣рнЗрм╛рмЗрмерм┐рммрм╛ рмЙрмЪрм┐рмдред")
        if deposit_amount and not deposit_amount.isdigit():
            errors.append("ЁЯФ┤ рмЬрморм╛ рм░рм╛рм╢рм┐ рмПрмХ рммрнЗрнЦрмз рм╕рмВрмЦрнНрнЯрм╛ рм╣рнЗрм╛рмЗрмерм┐рммрм╛ рмЙрмЪрм┐рмдред")

        # Submit button
        submit = st.form_submit_button("тЬЕ рмЬрморм╛ рмХрм░рмирнНрмдрнБ")

        if submit:
            if errors:
                for error in errors:
                    st.error(error)
            else:
                st.success("тЬЕ рмЬрморм╛ рмЕрмирнБрм░рнЗрм╛рмз рм╕рмлрм│ рмнрм╛рммрм░рнЗ рмкрнНрм░рнЗрм░рм┐рмд рм╣рнЗрм▓рм╛!")
                st.write(f"рмЦрм╛рмдрм╛рмзрм╛рм░рнА: {full_name}")
                st.write(f"рмлрнЗрм╛рми: {country_code} {phone_number}")
                st.write(f"рмЦрм╛рмдрм╛ рмирморнНрммрм░: {account_number}")
                st.write(f"рморнБрм▓рнНрнЯ: тВ╣{deposit_amount}")
                st.write(f"рмдрм╛рм░рм┐рмЦ: {deposit_date}")

# *Voice Input Section*
if st.session_state.voice_input:
    st.subheader("ЁЯОд рмзрнНрммрмирм┐ рмЗрмирмкрнБрмЯ")

    def recognize_speech():
        recognizer = sr.Recognizer()
        with sr.Microphone() as source:
            st.info("ЁЯОЩ рм╢рнБрмгрнБрмЫрм┐... рмХрм╣рмирнНрмдрнБ!")
            recognizer.adjust_for_ambient_noise(source)
            try:
                audio = recognizer.listen(source, timeout=None)
                text = recognizer.recognize_google(audio, language='or-IN')
                st.session_state.voice_text = text
                st.success("тЬЕ рмзрнНрн▒рмирм┐ рмзрм░рм╛рмЧрм▓рм╛!")
            except sr.UnknownValueError:
                st.warning("тЪа рмзрнНрн▒рмирм┐ рмЙрмжрнНрмзрм╛рм░ рм╣рнЗрм▓рм╛ рмирм╛рм╣рм┐рмБред")
            except sr.RequestError:
                st.error("ЁЯЪл рмзрнНрн▒рмирм┐ рмЬрмгрм╛ рмЕрм╕рморнНрмнрммред")

    col3, col4, col5 = st.columns(3)

    if col3.button("ЁЯОЩ рм╢рнБрмгрм┐рммрм╛ рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ"):
        st.session_state.recording = True
        recognize_speech()

    if col4.button("тП╣ рм░рнЛрмХрмирнНрмдрнБ"):
        st.session_state.recording = False

    if col5.button("ЁЯФД рм░рм┐рм╕рнЗрмЯрнН рмХрм░рмирнНрмдрнБ"):
        st.session_state.voice_text = ""
        st.session_state.recording = False
        st.warning("ЁЯФГ рмбрм╛рмЯрм╛ рмбрм┐рм▓рм┐рмЯрнН рм╣рнЗрм▓рм╛ред")

    voice_text = st.text_area("рмзрнНрн▒рмирм┐ рмбрм╛рмЯрм╛", st.session_state.voice_text, height=100)

    if st.button("ЁЯФД рмЗрмВрм░рм╛рмЬрнАрмХрнБ рмЕрмирнБрммрм╛рмж рмХрм░рмирнНрмдрнБ"):
        if voice_text.strip():
            try:
                translated_text = translator.translate(voice_text, src='or', dest='en').text
                st.success("тЬЕ рмЕрмирнБрммрм╛рмж рм╕рмлрм│ рм╣рнЗрм▓рм╛:")
                st.text_area("рмЕрмирнБрммрм╛рмжрм┐рмд рмкрм╛рмарнНрнЯ (English)", translated_text, height=100)
            except Exception as e:
                st.error(f"ЁЯЪл рмЕрмирнБрммрм╛рмжрм░рнЗ рмЕрм╕рнБрммрм┐рмзрм╛: {str(e)}")
        else:
            st.warning("тЪа рмЕрмирнБрммрм╛рмж рмкрм╛рмЗрмБ рмХрнМрмгрм╕рм┐ рмбрм╛рмЯрм╛ рморм┐рм│рм┐рм▓рм╛ рмирм╛рм╣рм┐рмБред")
