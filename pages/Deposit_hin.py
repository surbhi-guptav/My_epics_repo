import streamlit as st
import speech_recognition as sr
import re
from datetime import datetime
from googletrans import Translator

st.set_page_config(page_title="рдмреИрдВрдХ рдЬрдорд╛ рдлреЙрд░реНрдо", layout="centered")

if "manual_input" not in st.session_state:
    st.session_state.manual_input = False
if "voice_input" not in st.session_state:
    st.session_state.voice_input = False
if "voice_text" not in st.session_state:
    st.session_state.voice_text = ""
if "translated_text" not in st.session_state:
    st.session_state.translated_text = ""

st.markdown(
    """
    <style>
        .title {
            text-align: center;
            font-size: 36px;
            font-weight: bold;
            color: white;
            padding: 20px;
            border-radius: 10px;
            background: linear-gradient(90deg, #87CEEB, #4682B4);
            margin-bottom: 20px;
        }
        .stButton>button {
            width: 180px;
            height: 45px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 10px;
            transition: 0.3s;
            background: #87CEEB;
            color: white;
            border: none;
        }
        .stButton>button:hover {
            background: #4682B4;
        }
    </style>
    """,
    unsafe_allow_html=True
)

st.markdown('<p class="title">ЁЯПж рдмреИрдВрдХ рдЦрд╛рддрд╛ рдЬрдорд╛ рдлреЙрд░реНрдо</p>', unsafe_allow_html=True)

st.write("### рдЗрдирдкреБрдЯ рд╡рд┐рдзрд┐ рдЪреБрдиреЗрдВ:")
col1, col2 = st.columns(2)

if col1.button("ЁЯУЭ рдореИрдиреБрдЕрд▓ рдЗрдирдкреБрдЯ"):
    st.session_state.manual_input = True
    st.session_state.voice_input = False

if col2.button("ЁЯОд рдЖрд╡рд╛рдЬрд╝ рдЗрдирдкреБрдЯ рдХрд░реЗрдВ"):
    st.session_state.voice_input = True
    st.session_state.manual_input = False
    st.info("ЁЯОЩ рдмреЛрд▓реЗрдВ, рдФрд░ рдЖрдкрдХреЗ рд╢рдмреНрдж рд╡рд╛рд╕реНрддрд╡рд┐рдХ рд╕рдордп рдореЗрдВ рджрд░реНрдЬ рдХрд┐рдП рдЬрд╛рдПрдВрдЧреЗ!")

if st.session_state.voice_input:
    st.subheader("ЁЯОд рдЖрд╡рд╛рдЬрд╝ рдЗрдирдкреБрдЯ")
    st.info("рдЙрджрд╛рд╣рд░рдг: 'рдореЗрд░рд╛ рдирд╛рдо рд░рд╛рд╣реБрд▓ рд╣реИ, рдореЗрд░рд╛ рдлреЛрди рдирдВрдмрд░ 9876543210 рд╣реИ, рдореЗрд░рд╛ рдЦрд╛рддрд╛ рдирдВрдмрд░ 987667543210 рд╣реИ, рдореИрдВ 500 рд░реБрдкрдпреЗ рдЬрдорд╛ рдХрд░рдирд╛ рдЪрд╛рд╣рддрд╛ рд╣реВрдВред'")

    def recognize_speech():
        recognizer = sr.Recognizer()
        with sr.Microphone() as source:
            st.info("ЁЯОз рд╕реБрди рд░рд╣реЗ рд╣реИрдВ... рдмреЛрд▓реЗрдВ!")
            recognizer.adjust_for_ambient_noise(source)
            
            try:
                audio = recognizer.listen(source, timeout=None)
                text = recognizer.recognize_google(audio, language="hi-IN")
                st.session_state.voice_text = text
                st.success("тЬЕ рдЖрд╡рд╛рдЬрд╝ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рджрд░реНрдЬ рд╣реЛ рдЧрдпрд╛!")
            except sr.UnknownValueError:
                st.warning("тЪа рдХреНрд╖рдорд╛ рдХрд░реЗрдВ, рдореИрдВ рдСрдбрд┐рдпреЛ рдХреЛ рд╕рдордЭ рдирд╣реАрдВ рдкрд╛ рд╕рдХрд╛ред")
            except sr.RequestError:
                st.error("ЁЯЪл рд╕реНрдкреАрдЪ рд░рд┐рдХреЙрдЧреНрдирд┐рд╢рди рд╕реЗрд╡рд╛ рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИред")

    col3, col4, col5 = st.columns(3)
    
    if col3.button("ЁЯОЩ рд╕реБрдирдирд╛ рд╢реБрд░реВ рдХрд░реЗрдВ"):
        st.session_state.recording = True
        recognize_speech()

    if col4.button("ЁЯЫС рд╕реБрдирдирд╛ рдмрдВрдж рдХрд░реЗрдВ"):
        st.session_state.recording = False

    if col5.button("ЁЯФБ рд░реАрд╕реЗрдЯ рдХрд░реЗрдВ"):
        st.session_state.voice_text = ""
        st.session_state.translated_text = ""
        st.session_state.recording = False

    voice_text = st.text_area("рдЖрд╡рд╛рдЬрд╝ рдбреЗрдЯрд╛ (рд╣рд┐рдиреНрджреА)", st.session_state.voice_text, height=100)

    def translate_text():
        if st.session_state.voice_text.strip():
            translator = Translator()
            translated = translator.translate(st.session_state.voice_text, src="hi", dest="en")
            st.session_state.translated_text = translated.text
            st.success("тЬЕ рдЯреЗрдХреНрд╕реНрдЯ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЕрдиреБрд╡рд╛рджрд┐рдд рд╣реБрдЖ!")
        else:
            st.warning("тЪа рдХреЛрдИ рдЖрд╡рд╛рдЬрд╝ рдбреЗрдЯрд╛ рджрд░реНрдЬ рдирд╣реАрдВ рд╣реБрдЖред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред")

    if st.button("ЁЯФД рдЕрдВрдЧреНрд░реЗрдЬрд╝реА рдореЗрдВ рдЕрдиреБрд╡рд╛рдж рдХрд░реЗрдВ"):
        translate_text()

    translated_text = st.text_area("Translated Text (English)", st.session_state.translated_text, height=100)



